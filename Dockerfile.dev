# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.13-alpine

# This will be set by the GitHub action to the folder containing this component.
ARG FOLDER=/app

COPY --chown=1000:1000 . /app
WORKDIR ${FOLDER}

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Ensure installed tools can be executed out of the box
ENV UV_TOOL_BIN_DIR=/usr/local/bin

# Place executables in the environment at the front of the path
ENV PATH="$FOLDER/.venv/bin:$PATH"

# Install Node.js and nodemon for easy watch mode with Python
USER root
RUN apt-get update \
    && apt-get install -y curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g nodemon \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

USER 1000:1000

# Reset the entrypoint, don't invoke `uv`
ENTRYPOINT []

EXPOSE 8000
ENV PORT=8000
ENV HOST="0.0.0.0"

CMD ["/usr/bin/nodemon", "--delay", "1", "--exec", ".venv/bin/python", "src/main.py"]